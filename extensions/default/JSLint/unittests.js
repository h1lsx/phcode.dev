define(function(require,exports,module){var SpecRunnerUtils=brackets.getModule("spec/SpecRunnerUtils");describe("integration:JSHint",function(){let testProjectsFolder=SpecRunnerUtils.getTestPath("/spec/JSHintExtensionTest-files/"),testWindow,$,CodeInspection;var toggleJSLintResults=function(){$("#status-inspection").triggerHandler("click")};beforeAll(async function(){testWindow=await SpecRunnerUtils.createTestWindowAndRun(),$=testWindow.$,(CodeInspection=testWindow.brackets.test.CodeInspection).toggleEnabled(!0),await awaitsFor(()=>testWindow._JsHintExtensionReadyToIntegTest,"JsHint extension to be loaded",1e4)},3e4),afterAll(async function(){testWindow=null,$=null,await SpecRunnerUtils.closeTestWindow()},3e4),it("status icon should toggle Errors panel when errors present",async function(){await SpecRunnerUtils.loadProjectInTestWindow(testProjectsFolder+"valid-config-error"),await awaitsForDone(SpecRunnerUtils.openProjectFiles(["es8.js"]),"open test file with error"),await awaitsFor(()=>$("#problems-panel").is(":visible"),"Problems panel to be visible"),toggleJSLintResults(),await awaitsFor(()=>!$("#problems-panel").is(":visible"),"Problems panel to be hidden"),toggleJSLintResults(),await awaitsFor(()=>$("#problems-panel").is(":visible"),"Problems panel to be visible")}),it("should show errors if invalid .jshintrc detected",async function(){await SpecRunnerUtils.loadProjectInTestWindow(testProjectsFolder+"invalid-config"),await awaitsForDone(SpecRunnerUtils.openProjectFiles(["no-errors.js"]),"open test file"),await awaitsFor(()=>$("#problems-panel").is(":visible"),"Problems panel to be visible")}),it("should load valid es6 .jshintrc in project",async function(){await SpecRunnerUtils.loadProjectInTestWindow(testProjectsFolder+"valid-config-es6"),await awaitsForDone(SpecRunnerUtils.openProjectFiles(["es6.js"]),"open test file es6.js"),await awaits(100),await awaitsFor(()=>!$("#problems-panel").is(":visible"),"Problems panel to be hidden"),await awaitsForDone(SpecRunnerUtils.openProjectFiles(["es8.js"]),"open test file es8.js"),await awaitsFor(()=>$("#problems-panel").is(":visible"),"Problems panel to be visible")}),it("should extend valid es6 .jshintrc in project",async function(){await SpecRunnerUtils.loadProjectInTestWindow(testProjectsFolder+"valid-config-es6-extend"),await awaitsForDone(SpecRunnerUtils.openProjectFiles(["es6.js"]),"open test file es6.js"),await awaits(100),await awaitsFor(()=>!$("#problems-panel").is(":visible"),"Problems panel to be hidden"),await awaitsForDone(SpecRunnerUtils.openProjectFiles(["es8.js"]),"open test file es8.js"),await awaitsFor(()=>$("#problems-panel").is(":visible"),"Problems panel to be visible")}),it("should show errors if invalid .jshintrc extend file detected",async function(){await SpecRunnerUtils.loadProjectInTestWindow(testProjectsFolder+"invalid-config-extend"),await awaitsForDone(SpecRunnerUtils.openProjectFiles(["no-errors.js"]),"open test file"),await awaitsFor(()=>$("#problems-panel").is(":visible"),"Problems panel to be visible")})})});
//# sourceMappingURL=unittests.js.map
