{"version":3,"sources":["extensionsIntegrated/Phoenix/default-projects.js"],"names":["define","require","exports","module","ProjectManager","Strings","ZipUtils","async","setupStartupProject","forceCreate","console","log","getWelcomeProjectPath","exists","Phoenix","VFS","existsAsync","unzipURLToLocation","indexHtmlPath","fs","readFile","err","text","includes","error","newText","replace","DEFAULT_PROJECT_HTML_CLICK_HERE","writeFile","writErr","setupExploreProject","exploreProjectPath","getExploreProjectPath","init","firstBoot","isNativeApp"],"mappings":"AAsBAA,OAAO,SAAUC,QAASC,QAASC,QAC/B,MAAMC,eAA0BH,QAAQ,0BACpCI,QAAcJ,QAAQ,WACtBK,SAAWL,QAAQ,kBAEvBM,eAAeC,oBAAoBC,aAE/B,GADAC,QAAQC,IAAI,6BAA8BP,eAAeQ,0BACrDH,YAAY,CACZ,IAAII,OACJ,SADmBC,QAAQC,IAAIC,YAAYZ,eAAeQ,yBAGtD,YADAF,QAAQC,IAAI,wCAAyCP,eAAeQ,+BAItEN,SAASW,mBAAmB,gCAAiCb,eAAeQ,yBAClF,MAAMM,iBAAmBd,eAAeQ,oCACxCO,GAAGC,SAASF,cAAe,OAAQ,SAAUG,IAAKC,MAC9C,GAAGD,MAAQC,KACP,OAEJ,IAAIA,KAAKC,SAAS,cAEd,YADAb,QAAQc,MAAM,wDAGlB,MAAMC,QAAUH,KAAKI,QAAQ,aAAcrB,QAAQsB,iCACnDR,GAAGS,UAAUV,cAAeO,QAAS,OAASI,UACvCA,SACCnB,QAAQc,MAAM,+CAAgDK,aAK9EtB,eAAeuB,sBACX,IAAIC,mBAAqB3B,eAAe4B,wBACpCnB,aAAeC,QAAQC,IAAIC,YAAYe,sBAEvCrB,QAAQC,IAAI,6BAA8BoB,0BACpCzB,SAASW,mBAAmB,qCAAsCc,qBAIhF7B,QAAQ4B,oBAAsBA,oBAC9B5B,QAAQM,oBAAsBA,oBAE9BN,QAAQ+B,KAAO1B,iBACRO,QAAQoB,WACP1B,qBAAoB,GAEpBM,QAAQqB,aAKRL","sourcesContent":["/*\n * GNU AGPL-3.0 License\n *\n * Copyright (c) 2021 - present core.ai . All rights reserved.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License\n * for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see https://opensource.org/licenses/AGPL-3.0.\n *\n */\n\n/*globals Phoenix, JSZip, Filer, fs*/\n\ndefine(function (require, exports, module) {\n    const ProjectManager          = require(\"project/ProjectManager\"),\n        Strings     = require(\"strings\"),\n        ZipUtils = require(\"utils/ZipUtils\");\n\n    async function setupStartupProject(forceCreate) {\n        console.log(\"setting up startup project\", ProjectManager.getWelcomeProjectPath());\n        if(!forceCreate){\n            let exists = await Phoenix.VFS.existsAsync(ProjectManager.getWelcomeProjectPath());\n            if(exists){\n                console.log(\"Startup project already exists, using\", ProjectManager.getWelcomeProjectPath());\n                return;\n            }\n        }\n        await ZipUtils.unzipURLToLocation('assets/default-project/en.zip', ProjectManager.getWelcomeProjectPath());\n        const indexHtmlPath = `${ProjectManager.getWelcomeProjectPath()}index.html`;\n        fs.readFile(indexHtmlPath, 'utf8', function (err, text) {\n            if(err || !text){\n                return;\n            }\n            if(!text.includes(\"CLICK_HERE\")){\n                console.error(\"Default project index.html doesnt have CLICK_HERE!!!\");\n                return;\n            }\n            const newText = text.replace(\"CLICK_HERE\", Strings.DEFAULT_PROJECT_HTML_CLICK_HERE);\n            fs.writeFile(indexHtmlPath, newText, 'utf8', (writErr)=>{\n                if(writErr){\n                    console.error(\"Error translating default project index.html\", writErr);\n                }\n            });\n        });\n    }\n    async function setupExploreProject() {\n        let exploreProjectPath = ProjectManager.getExploreProjectPath();\n        let exists = await Phoenix.VFS.existsAsync(exploreProjectPath);\n        if(!exists){\n            console.log(\"setting up explore project\", exploreProjectPath);\n            await ZipUtils.unzipURLToLocation('assets/sample-projects/explore.zip', exploreProjectPath);\n        }\n    }\n\n    exports.setupExploreProject = setupExploreProject;\n    exports.setupStartupProject = setupStartupProject;\n\n    exports.init = async function () {\n        if(Phoenix.firstBoot){\n            setupStartupProject(true);\n        }\n        if(!Phoenix.isNativeApp) {\n            // in browsers, we do this as the user wont see the explore project in documents folder anyway and will\n            // help in improved ux of fast project open. In desktop, we got complaint that users document dir is getting\n            // polluted with unwanted projects, so we dont do this on desktop and only create this when user explicitly\n            // clicks to open explore project.\n            setupExploreProject();\n        }\n    };\n});\n"],"file":"default-projects.js"}