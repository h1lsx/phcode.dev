define(function(require,exports,module){const ProjectManager=require("project/ProjectManager"),Strings=require("strings"),ZipUtils=require("utils/ZipUtils");async function setupStartupProject(forceCreate){if(console.log("setting up startup project",ProjectManager.getWelcomeProjectPath()),!forceCreate){let exists;if(await Phoenix.VFS.existsAsync(ProjectManager.getWelcomeProjectPath()))return void console.log("Startup project already exists, using",ProjectManager.getWelcomeProjectPath())}await ZipUtils.unzipURLToLocation("assets/default-project/en.zip",ProjectManager.getWelcomeProjectPath());const indexHtmlPath=`${ProjectManager.getWelcomeProjectPath()}index.html`;fs.readFile(indexHtmlPath,"utf8",function(err,text){if(err||!text)return;if(!text.includes("CLICK_HERE"))return void console.error("Default project index.html doesnt have CLICK_HERE!!!");const newText=text.replace("CLICK_HERE",Strings.DEFAULT_PROJECT_HTML_CLICK_HERE);fs.writeFile(indexHtmlPath,newText,"utf8",writErr=>{writErr&&console.error("Error translating default project index.html",writErr)})})}async function setupExploreProject(){let exploreProjectPath=ProjectManager.getExploreProjectPath(),exists;await Phoenix.VFS.existsAsync(exploreProjectPath)||(console.log("setting up explore project",exploreProjectPath),await ZipUtils.unzipURLToLocation("assets/sample-projects/explore.zip",exploreProjectPath))}exports.setupExploreProject=setupExploreProject,exports.setupStartupProject=setupStartupProject,exports.init=async function(){Phoenix.firstBoot&&setupStartupProject(!0),Phoenix.isNativeApp||setupExploreProject()}});
//# sourceMappingURL=default-projects.js.map
