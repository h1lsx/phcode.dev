define(function(require,exports,module){const NotificationUI=require("widgets/NotificationUI"),Commands=require("command/Commands"),Strings=require("strings"),Menus=require("command/Menus"),StringUtils=require("utils/StringUtils"),KeyBindingManager=require("command/KeyBindingManager"),Metrics=require("utils/Metrics"),Dialogs=require("widgets/Dialogs"),Mustache=require("thirdparty/mustache/mustache"),PreferencesManager=require("preferences/PreferencesManager"),SurveyTemplate=require("text!./html/survey-template.html"),NOTIFICATION_BACKOFF=1e4,GUIDED_TOUR_LOCAL_STORAGE_KEY="guidedTourActions",surveyLinksURL="https://updates.phcode.io/surveys.json",BOOT_DIALOG_DELAY=2e3,GENERAL_SURVEY_TIME=6e5,ONE_MONTH_IN_DAYS=30,POWER_USER_SURVEY_INTERVAL_DAYS=35,USAGE_COUNTS_KEY="healthDataUsage",userAlreadyDidAction=PhStore.getItem(GUIDED_TOUR_LOCAL_STORAGE_KEY)?JSON.parse(PhStore.getItem(GUIDED_TOUR_LOCAL_STORAGE_KEY)):{version:1,newProjectShown:!1,beautifyCodeShown:!1,generalSurveyShownVersion:0};let currentlyShowingNotification;function _showBeautifyNotification(){if(userAlreadyDidAction.beautifyCodeShown)return;let editorContextMenu=Menus.getContextMenu(Menus.ContextMenuIds.EDITOR_MENU);function _showNotification(){currentlyShowingNotification||setTimeout(()=>{let keyboardShortcut=KeyBindingManager.getKeyBindingsDisplay(Commands.EDIT_BEAUTIFY_CODE);keyboardShortcut=keyboardShortcut||"",userAlreadyDidAction.beautifyCodeShown=!0,PhStore.setItem(GUIDED_TOUR_LOCAL_STORAGE_KEY,JSON.stringify(userAlreadyDidAction)),Metrics.countEvent(Metrics.EVENT_TYPE.UI,"guide","beautify"),(currentlyShowingNotification=NotificationUI.createFromTemplate(StringUtils.format(Strings.BEAUTIFY_CODE_NOTIFICATION,keyboardShortcut),"editor-context-menu-edit.beautifyCode",{allowedPlacements:["left","right"],autoCloseTimeS:15,dismissOnClick:!0})).done(()=>{currentlyShowingNotification=null}),editorContextMenu.off(Menus.EVENT_BEFORE_CONTEXT_MENU_OPEN,_showNotification)},500)}editorContextMenu.on(Menus.EVENT_BEFORE_CONTEXT_MENU_OPEN,_showNotification)}function _showNewProjectNotification(){userAlreadyDidAction.newProjectShown||(currentlyShowingNotification?setTimeout(_showNewProjectNotification,NOTIFICATION_BACKOFF):(userAlreadyDidAction.newProjectShown=!0,PhStore.setItem(GUIDED_TOUR_LOCAL_STORAGE_KEY,JSON.stringify(userAlreadyDidAction)),Metrics.countEvent(Metrics.EVENT_TYPE.UI,"guide","newProj"),(currentlyShowingNotification=NotificationUI.createFromTemplate(Strings.NEW_PROJECT_NOTIFICATION,"newProject",{allowedPlacements:["top","bottom"],autoCloseTimeS:15,dismissOnClick:!0})).done(()=>{currentlyShowingNotification=null})))}function _loadTwitterScripts(){if(window.twttr)return;const twitterScript=document.createElement("script");twitterScript.setAttribute("src","https://platform.twitter.com/widgets.js"),document.body.appendChild(twitterScript),twitterScript.addEventListener("load",()=>{window.twttr?window.twttr.events.bind("click",function(ev){Metrics.countEvent(Metrics.EVENT_TYPE.USER,"notify","twit.click",1),Phoenix.isNativeApp&&Phoenix.app.openURLInDefaultBrowser("https://twitter.com/intent/tweet?screen_name=phcodedev&ref_src=twsrc%5Etfw")}):console.error("twitter scripts not loaded")})}function _openStarsPopup(){_loadTwitterScripts();let notification=$(`${Strings.GITHUB_STARS_POPUP}\n                        <div class="gtstarph" style="display: flex;justify-content: space-around;margin-top: 6px;">\n                            <a class="github-button"\n                             href="https://github.com/phcode-dev/phoenix"\n                             data-color-scheme="no-preference: dark; light: dark; dark: dark;"\n                             data-icon="octicon-star"\n                             data-size="large"\n                             data-show-count="true"\n                             title="Star phcode.dev on GitHub"\n                             aria-label="Star phcode-dev/phoenix on GitHub">Star</a>\n                             <a class="github-button"\n                             href="https://github.com/sponsors/phcode-dev"\n                             data-color-scheme="no-preference: dark; light: dark; dark: dark;"\n                             data-icon="octicon-heart"\n                             data-size="large"\n                             data-show-count="true"\n                             title="Star phcode.dev on GitHub"\n                             aria-label="Sponsor @phcode-dev on GitHub">Sponsor</a>\n                           <script async defer src="https://buttons.github.io/buttons.js"><\/script>\n                        </div>\n                       ${Strings.GITHUB_STARS_POPUP_TWITTER}\n                       <div class="twbnpop" style="display: flex;justify-content: space-around;margin-top: 6px;">\n                            <a href="https://twitter.com/intent/tweet?screen_name=phcodedev&ref_src=twsrc%5Etfw"\n                             class="twitter-mention-button"\n                             data-size="large"\n                             data-related="BracketsCont,brackets"\n                             data-show-count="false">Tweet to @phcodedev</a>\n                       </div>\n                    </div>`);notification.find(".gtstarph").click(()=>{Metrics.countEvent(Metrics.EVENT_TYPE.USER,"notify","star.click",1),Phoenix.isNativeApp&&Phoenix.app.openURLInDefaultBrowser("https://github.com/phcode-dev/phoenix")}),NotificationUI.createToastFromTemplate(Strings.ENJOYING_APP,notification,{dismissOnClick:!1})}function _showRequestStarsPopup(){if(Phoenix.firstBoot)return;let lastShownDate=userAlreadyDidAction.lastShownGithubStarsDate,nextShowDate=new Date(lastShownDate);nextShowDate.setUTCDate(nextShowDate.getUTCDate()+ONE_MONTH_IN_DAYS);let currentDate=new Date;(!lastShownDate||currentDate>=nextShowDate)&&(Metrics.countEvent(Metrics.EVENT_TYPE.USER,"notify","star",1),_openStarsPopup(),userAlreadyDidAction.lastShownGithubStarsDate=Date.now(),PhStore.setItem(GUIDED_TOUR_LOCAL_STORAGE_KEY,JSON.stringify(userAlreadyDidAction)))}function _showGeneralSurvey(surveyURL){setTimeout(()=>{let surveyVersion=6;var templateVars={Strings:Strings,surveyURL:surveyURL};6!==userAlreadyDidAction.generalSurveyShownVersion&&(Metrics.countEvent(Metrics.EVENT_TYPE.USER,"survey","generalShown",1),Dialogs.showModalDialogUsingTemplate(Mustache.render(SurveyTemplate,templateVars)),userAlreadyDidAction.generalSurveyShownVersion=6,PhStore.setItem(GUIDED_TOUR_LOCAL_STORAGE_KEY,JSON.stringify(userAlreadyDidAction)))},GENERAL_SURVEY_TIME)}function _isPowerUser(){let usageData=PreferencesManager.getViewState(USAGE_COUNTS_KEY)||{},dateKeys=Object.keys(usageData),dateBefore14Days=new Date,totalUsageMinutes=0,totalUsageDays=0;dateBefore14Days.setUTCDate(dateBefore14Days.getUTCDate()-14);for(let dateKey of dateKeys){let date;new Date(dateKey)>=dateBefore14Days&&(totalUsageDays++,totalUsageMinutes+=usageData[dateKey])}return totalUsageDays>=3||totalUsageMinutes/60>=8}function _showPowerUserSurvey(surveyURL){if(_isPowerUser()){Metrics.countEvent(Metrics.EVENT_TYPE.USER,"power","user",1);let lastShownDate=userAlreadyDidAction.lastShownPowerSurveyDate,nextShowDate=new Date(lastShownDate),currentDate;if(nextShowDate.setUTCDate(nextShowDate.getUTCDate()+POWER_USER_SURVEY_INTERVAL_DAYS),new Date<nextShowDate)return;setTimeout(()=>{Metrics.countEvent(Metrics.EVENT_TYPE.USER,"survey","powerShown",1);const templateVars={Strings:Strings,surveyURL:surveyURL};Dialogs.showModalDialogUsingTemplate(Mustache.render(SurveyTemplate,templateVars)),userAlreadyDidAction.lastShownPowerSurveyDate=Date.now(),PhStore.setItem(GUIDED_TOUR_LOCAL_STORAGE_KEY,JSON.stringify(userAlreadyDidAction))},BOOT_DIALOG_DELAY)}}async function _showSurveys(){try{if(!navigator.onLine)return;let surveyJSON=await fetch(surveyLinksURL);surveyJSON=await surveyJSON.json(),!Phoenix.isNativeApp&&surveyJSON.browser&&(surveyJSON={newUser:surveyJSON.browser.newUser||surveyJSON.newUser,powerUser:surveyJSON.browser.powerUser||surveyJSON.powerUser}),surveyJSON.newUser&&_showGeneralSurvey(surveyJSON.newUser),surveyJSON.powerUser&&_showPowerUserSurvey(surveyJSON.powerUser)}catch(e){console.error("Error fetching survey link",surveyLinksURL,e),Metrics.countEvent(Metrics.EVENT_TYPE.USER,"survey","fetchError",1)}}let tourStarted=!1;exports.startTourIfNeeded=function(){tourStarted||(tourStarted=!0,_showNewProjectNotification(),_showBeautifyNotification(),_showRequestStarsPopup(),_showSurveys())}});
//# sourceMappingURL=guided-tour.js.map
